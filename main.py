import os
import asyncio
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import CommandStart
from dotenv import load_dotenv
from openai import OpenAI
from gtts import gTTS
from uuid import uuid4

load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

openai = OpenAI(api_key=OPENAI_API_KEY)
user_data = {}

@dp.message(CommandStart())
async def start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –ë—É–ª—Ç—ã—Ö–≤–æ—Å—Ç-—Å–∫–∞–∑–æ—á–Ω–∏–∫ üêæ\n–ö–∞–∫ –∑–æ–≤—É—Ç —Ä–µ–±—ë–Ω–∫–∞, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ —Å–æ—á–∏–Ω—è—Ç—å —Å–∫–∞–∑–∫–∏?")
    user_data[message.from_user.id] = {}

@dp.message(F.text)
async def handle_text(message: types.Message):
    user_id = message.from_user.id
    text = message.text.strip()

    if 'child_name' not in user_data.get(user_id, {}):
        user_data[user_id] = {'child_name': text}
        await message.answer(f"–ò–º—è —Ä–µ–±—ë–Ω–∫–∞ ‚Äî {text}? –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏ —Ç–µ–º—É —Å–∫–∞–∑–∫–∏ üåü")
    else:
        child_name = user_data[user_id]['child_name']
        await message.answer("–ü–∏—à—É —Å–∫–∞–∑–∫—É... üìñ")

        prompt = f"–°–æ—á–∏–Ω–∏ —Å–∫–∞–∑–∫—É —Å –≥–µ—Ä–æ–µ–º –ø–æ –∏–º–µ–Ω–∏ –ë—É–ª—Ç—ã—Ö–≤–æ—Å—Ç. –°–∫–∞–∑–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤–æ–ª—à–µ–±–Ω–æ–π, –¥–æ–±—Ä–æ–π, —Å –ø–æ—É—á–∏—Ç–µ–ª—å–Ω—ã–º –∫–æ–Ω—Ü–æ–º. –ò–º—è —Ä–µ–±—ë–Ω–∫–∞ ‚Äî {child_name}. –¢–µ–º–∞: {text}."
        story_response = openai.chat.completions.create(
            model="gpt-4",
            messages=[{"role": "user", "content": prompt}],
            temperature=0.95,
            max_tokens=800
        )
        story = story_response.choices[0].message.content.strip()
        await message.answer(story)

        await message.answer("–°–æ–∑–¥–∞—é –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—é... üñº")
        image_prompt = f"–ò–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è –∫ –¥–µ—Ç—Å–∫–æ–π —Å–∫–∞–∑–∫–µ —Å –≥–µ—Ä–æ–µ–º –ë—É–ª—Ç—ã—Ö–≤–æ—Å—Ç, –Ω–∞ —Ç–µ–º—É: {text}. –í–æ–ª—à–µ–±–Ω—ã–π —Å—Ç–∏–ª—å, —è—Ä–∫–∏–µ —Ü–≤–µ—Ç–∞."
        image_response = openai.images.generate(
            model="dall-e-3",
            prompt=image_prompt,
            size="1024x1024",
            n=1
        )
        await message.answer_photo(image_response.data[0].url)

        await message.answer("–ì–æ—Ç–æ–≤–ª—é –æ–∑–≤—É—á–∫—É... üé§")
        tts = gTTS(story, lang="ru")
        filename = f"/tmp/{uuid4().hex}.mp3"
        tts.save(filename)
        await message.answer_voice(types.FSInputFile(filename))
        os.remove(filename)

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
